{
    "portals": [
        {"name":"paygate", "img": "https://avatars.githubusercontent.com/u/10938121?s=280&v=4"},
        {"name":"enets", "img": "https://www.ppro.com/wp-content/uploads/2021/06/eNETS_Logo.png"}
    ],
    "steps": ["General Information","Select Payment Provider","Portal Info","Initiate Transaction Request","Request redirect"],
    "project_description": [
        {"type": "h4", "value": "Payment Portals Showcase: PayGate and eNets"},
        {"type": "body1", "value": "This project is designed to demonstrate the integration and functionality of two popular payment portals: PayGate and eNets."},
        {"type": "body1", "value": "The objective is to provide a comprehensive guide on how to implement these portals to handle transaction requests, manage user redirections to the respective payment portals, and process query responses effectively."},
        {"type": "h5", "value": "Implementation Details:"},
        {"type": "h6", "value": "Transaction Requests:"},
        {"type": "body1", "value": "The project includes detailed examples of how to configure and send transaction requests to both PayGate and eNets. It covers the necessary API endpoints, required parameters, and how to securely transmit transaction data."},
        {"type": "h6", "value": "Redirects to Portals:"},
        {"type": "body1", "value": "Upon initiating a transaction, users are seamlessly redirected to the appropriate payment portal (PayGate or eNets) to complete their payment. The project demonstrates how to handle these redirects and ensure a smooth user experience."},
        {"type": "h6", "value": "Handling Queries:"},
        {"type": "body1", "value": "Post-transaction, the project provides examples of how to handle queries from the payment portals. This includes confirming the status of transactions, handling successful payments, and managing failed or incomplete transactions."},
        {"type": "body1", "value": "This project is intended for educational purposes, offering developers a clear and concise reference for integrating PayGate and eNets into their own applications."}
    ],
    "paygate": {
      "portal_info": [
        {"type": "body1", "value": "PayGate is a versatile payment gateway that provides businesses with secure and efficient payment processing solutions. It supports various payment methods, including credit cards, mobile payments, and bank transfers. "},
        {"type": "body1", "value": "For developers looking to integrate PayGate into their applications, the "},
        {"type": "body1", "link": true, "value": "PayGate Developer Portal", "src": "https://map.paygate.co.za/login.php"},
        {"type": "body1", "value": " offers comprehensive resources and tools. "},
        {"type": "body1", "value": "Detailed integration guidelines and API references can be found in the "},
        {"type": "body1", "link": true, "value": "PayGate Documentation", "src": "https://docs.paygate.co.za/"},
        {"type": "body1", "value": ", making it easier to implement and manage payment transactions seamlessly."}
      ],
      "initialize": {
        "description": "The merchant begins the process by posting a detailed Request to PayWeb.\nField names posted to PayWeb should all be UPPERCASE as described in the table.",
        "pre_req_table": [
          {"field": "PAYGATE_ID", "type": "varchar(20)","required": true},
          {"field": "REFERENCE", "type": "varchar(110)","required": true},
          {"field": "AMOUNT", "type": "varchar(20)","required": true},
          {"field": "CURRENCY", "type": "varchar(5)","required": true},
          {"field": "RETURN_URL", "type": "varchar(255)","required": true},
          {"field": "TRANSACTION_DATE", "type": "datetime","required": true},
          {"field": "LOCALE", "type": "varchar(5)","required": true},
          {"field": "COUNTRY", "type": "varchar(5)","required": true},
          {"field": "EMAIL", "type": "varchar(255)","required": true},
          {"field": "PAY_METHOD", "type": "varchar(5)","required": false},
          {"field": "PAY_METHOD_DETAIL", "type": "varchar(45)","required": false},
          {"field": "NOTIFY_URL", "type": "Text","required": false},
          {"field": "USER1", "type": "varchar(255)","required": false},
          {"field": "USER2", "type": "varchar(255)","required": false},
          {"field": "USER3", "type": "varchar(255)","required": false},
          {"field": "VAULT", "type": "tinyint(3)","required": false},
          {"field": "VAULT_ID", "type": "varchar(40)","required": false},
          {"field": "CHECKSUM", "type": "varchar(40)","required": true}
        ],
        "result": "The result is returned as a text string where keys and values are sperated by equal signs(=) and key-value pairs are seperated by ampersands(&). The response will be used next during the redirect request.",
        "code": "import CryptoJS from 'crypto-js';\n\nexport default async function initiate_paygate() {\n  // Encryption key\n  const encryptionKey = 'secret';\n  \n  // Create the data object\n  const data = {\n    PAYGATE_ID: '10011072130',\n    REFERENCE: 'pgtest_123456789',\n    AMOUNT: '3299',\n    CURRENCY: 'ZAR',\n    RETURN_URL: 'https://my.return.url/page',\n    TRANSACTION_DATE: new Date().toISOString().slice(0, 19).replace('T', ' '),\n    LOCALE: 'en-za',\n    COUNTRY: 'ZAF',\n    EMAIL: 'customer@paygate.co.za'\n  };\n\n  // Create checksum\n  const checksumString = Object.values(data).join('') + encryptionKey;\n  const checksum = CryptoJS.MD5(checksumString).toString();\n\n  // Add checksum to the data\n  data.CHECKSUM = checksum;\n\n  // Convert data to URL-encoded string\n  const fieldsString = new URLSearchParams(data).toString();\n\n  // Define the request options\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Referer': window.location.hostname\n    },\n    body: fieldsString\n  };\n\n  try {\n    // Send the POST request\n    const res = await fetch('https://secure.paygate.co.za/payweb3/initiate.trans', requestOptions);\n    if (res.ok) {\n      return await res.text();\n    } else {\n      throw new Error('Network response was not ok');\n    }\n  } catch (error) {\n    return { \"Error\": `An error occurred during the request: ${error.message}` };\n  }\n}",
        "language": "javascript",
        "post_req_table": [
          {"field": "PAYGATE_ID", "type": "varchar(20)"},
          {"field": "PAY_REQUEST_ID", "type": "varchar(36)"},
          {"field": "REFERENCE", "type": "varchar(110)"},
          {"field": "CHECKSUM", "type": "varchar(32)"}
        ]
      }
    },
    "enets": {
      "portal_info": [
        {"type": "body1", "value": "eNets is a leading online payment gateway in Asia, providing secure and reliable payment solutions for businesses. "},
        {"type": "body1", "value": "For developers seeking to integrate eNets into their applications, the "},
        {"type": "body1", "link": true, "value": "eNets Developer Portal", "src": "https://developer.nets.com.sg/"},
        {"type": "body1", "value": " offers comprehensive documentation and resources. "},
        {"type": "body1","value": "Detailed technical guides and API references can be accessed in the "},
        {"type": "body1", "link": true, "value": "eNets Documentation", "src": "https://developer.nets.com.sg/guide/"},
        {"type": "body1", "value": ", facilitating seamless integration and management of online payments."},
        {"type": "body1","value": "eNets also includes a functional "},
        {"type": "body1", "link": true, "value": "sandbox", "src": "https://uat2.enets.sg/demo/soapi.html"},
        {"type": "body1","value": " for testing."}
      ],
      "initialize": {
        "code": "import React from 'react';\nimport { Box } from '@mui/material';\n\nconst App = () => {\n  return (\n    <Box sx={{ padding: 2 }}>\n      Hello, world!\n    </Box>\n  );\n};\n\nexport default App;",
        "language": "javascript"
      }
    }
}